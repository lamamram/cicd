# image par défaut du pipeline
image: $CI_REGISTRY/root/myusine/docker:19

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

stages:
  - builds
  - tests
  - deploys

# services réseaux ajoutés à un job (ou au pipeline)
# les conteneurs sont disponibles pour des connections
# depuis le conteneur du job
services:
  # - docker:19-dind
  - name: $CI_REGISTRY/root/myusine/docker:19-dind
    # hostname du service réseau
    alias: docker
    entrypoint:
      - "dockerd-entrypoint.sh"
    command:
      - "--insecure-registry"
      - "gitlab.myusine.fr:5000"
before_script:
  - >
    docker login 
    -u $CI_REGISTRY_USER 
    -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

#désactivé
build:
  stage: builds
  script:
    - docker build -t $CI_REGISTRY/root/myusine/my_tomcat_tmp:1.0 .
    # - >
    #   docker login 
    #   -u $CI_REGISTRY_USER 
    #   -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/root/myusine/my_tomcat_tmp:1.0 .

# désactivé
.test:
  stage: tests
  # test de l'image généré précédemment avec 
  # vérification du message de sortie
  # (attention au CMD qui ne renvoie pas le prompt)
  script:
    - >
      docker container run 
      --name test
      $CI_REGISTRY/root/myusine/my_tomcat_tmp:1.0 
      /opt/tomcat/bin/startup.sh | grep -o "started."
    - > 
      docker tag 
      $CI_REGISTRY/root/myusine/my_tomcat_tmp:1.0
      $CI_REGISTRY/root/myusine/my_tomcat:1.0
    - >
      docker login 
      -u $CI_REGISTRY_USER 
      -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/root/myusine/my_tomcat:1.0
  
.deploy:
  image: $CI_REGISTRY/root/myusine/ansible:ready
  stage: deploys
  # gestion de la clé privée
  # et des contraintes ssh
  before_script:
    - echo "$ANSIBLE_PKEY" > ansible_pkey
    - chmod 700 .
    - chmod 400 ansible_pkey
  script:
    - ansible-playbook bootstrap.yml
    

